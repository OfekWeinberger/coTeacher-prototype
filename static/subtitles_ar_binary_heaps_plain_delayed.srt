1
00:00:04,660 --> 00:00:16,1300

2
00:00:16,1302 --> 00:00:19,1708
اليوم سنتناول نوعًا مختلفًا

3
00:00:19,1710 --> 00:00:22,420
من بنية بيانات تشبه الشجرة وتسمى "هيب"

4
00:00:22,422 --> 00:00:23,422
الهيب الثنائي

5
00:00:23,424 --> 00:00:25,730
سيمكننا هذا من حل مشكلات الفرز

6
00:00:25,732 --> 00:00:26,732
بطريقة جديدة

7
00:00:26,734 --> 00:00:31,018
دعوني أذكّركم أولًا بجزء معين

8
00:00:31,020 --> 00:00:32,292
المشكلة التي سنحلها اليوم

9
00:00:32,294 --> 00:00:33,672
تُسمى "طابور الأولويات"

10
00:00:33,714 --> 00:00:34,1486
هذه هي الواجهة

11
00:00:34,1488 --> 00:00:37,312
سوف نرى عدة تراكيب بيانات، لكن هناك تركيب بيانات رئيسي لهذا اليوم

12
00:00:37,314 --> 00:00:38,314
وهو تركيب البيانات الرئيسي لليوم

13
00:00:38,1678 --> 00:00:44,1482
وهذا هو جزء فرعي من واجهة المجموعات

14
00:00:44,1484 --> 00:00:45,1484
الواجهة

15
00:00:46,1842 --> 00:00:49,1878
والأجزاء الفرعية مثيرة للاهتمام لأننا قد نستطيع

16
00:00:49,1880 --> 00:00:52,790
حلها بشكل أفضل وأسرع وبطريقة أبسط، شيء من هذا القبيل

17
00:00:53,216 --> 00:00:58,1584
وهكذا سوف تتعرفون، يجب أن تتعرفوا على جميع

18
00:00:58,1586 --> 00:01:01,1018
هذه العمليات، باستثناء أننا لم نسلط الضوء عادةً على

19
00:01:01,1020 --> 00:01:02,1122
عملية العثور على القيمة العظمى

20
00:01:02,1124 --> 00:01:05,240
لذا هنا نهتم بتخزين مجموعة

21
00:01:05,242 --> 00:01:06,242
من العناصر

22
00:01:06,244 --> 00:01:09,1142
لها مفاتيح، والتي نفكر فيها كـ

23
00:01:09,1144 --> 00:01:10,1144
أولويات

24
00:01:10,1146 --> 00:01:12,528
ونريد أن نكون قادرين على تحديد

25
00:01:12,530 --> 00:01:16,1556
العنصر ذي أرفع أولوية في مجموعتنا و

26
00:01:16,1558 --> 00:01:17,1558
إزالته

27
00:01:17,1560 --> 00:01:19,696
ولهذا هناك العديد من الدوافع لذلك

28
00:01:19,698 --> 00:01:21,244
ربما لديك جهاز توجيه، حيث تدخل رزم إلى

29
00:01:21,246 --> 00:01:23,170
جهاز التوجيه، ولها أولويات مختلفة مخصصة لها،

30
00:01:23,172 --> 00:01:24,830
وترغب في توجيه أعلى أولوية

31
00:01:24,832 --> 00:01:25,832
أولاً

32
00:01:25,834 --> 00:01:28,1206
أو لديك عمليات على حاسوبك تحاول

33
00:01:28,1208 --> 00:01:33,078
التشغيل على معالج أحادي النواة،

34
00:01:33,080 --> 00:01:34,092
وعليك اختيار العملية التالية للتنفيذ،

35
00:01:34,094 --> 00:01:36,1444
وعادةً ما تشغل العمليات ذات الأولوية الأعلى

36
00:01:36,1446 --> 00:01:37,1446
أولاً

37
00:01:37,1448 --> 00:01:42,1500
أو تحاول محاكاة نظام حيث

38
00:01:42,1502 --> 00:01:44,820
تحدث أحداث في أوقات مختلفة، وترغب

39
00:01:44,822 --> 00:01:47,640
في معالجة الحدث التالي بترتيب حسب الوقت

40
00:01:47,642 --> 00:01:49,1692
كل هذه أمثلة على واجهة

41
00:01:49,1694 --> 00:01:50,1694
طابور الأولويات

42
00:01:50,1696 --> 00:01:52,1726
سنرى حتى تطبيقات داخل هذه المادة عندما

43
00:01:52,1728 --> 00:01:53,1728
نصل إلى خوارزميات الرسم البياني

44
00:01:53,1730 --> 00:01:56,726
ولكن الشيءان الرئيسيان اللذان نود

45
00:01:56,728 --> 00:01:57,1822
دعمهما هما إدراج عنصر،

46
00:01:57,1824 --> 00:02:00,1542
والذي يتضمن مفتاحاً، وحذف العنصر الأقصى

47
00:02:00,1544 --> 00:02:02,1320
وإرجاعه في نفس

48
00:02:02,1322 --> 00:02:03,1322
الوقت

49
00:02:03,1324 --> 00:02:07,028
سنتحدث أيضاً قليلاً عن القدرة على

50
00:02:07,030 --> 00:02:09,914
بناء البنية أسرع من مجرد إدراجها

51
00:02:09,916 --> 00:02:11,940
وأيضاً عن تعقيد مجرد العثور على

52
00:02:11,942 --> 00:02:13,1486
القيمة العظمى بدون حذفها

53
00:02:13,1488 --> 00:02:17,1562
يمكنك محاكاة ذلك بواسطة هاتين العمليتين

54
00:02:17,1564 --> 00:02:18,1564
بحذف القيمة العظمى ثم إعادة إدراجها

55
00:02:18,1566 --> 00:02:21,276
وهذا يعمل

56
00:02:21,278 --> 00:02:23,334
ولكن غالباً ما يمكننا أن نفعل ذلك بشكل أسرع
